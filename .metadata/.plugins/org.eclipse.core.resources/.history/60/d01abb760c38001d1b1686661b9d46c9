package com.model;

import java.nio.channels.NonWritableChannelException;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;

import com.db.MyConnection;
import com.pojo.User;

public class UserImpl {

	
	public boolean register(User user) {
		boolean state=false;
		try(Connection conn=MyConnection.connect()){
			
			String sql="insert into user values (?,?,?,?,?,?)";
			PreparedStatement pstmt=conn.prepareStatement(sql);
			pstmt.setString(1, user.getUserName());
			pstmt.setString(2, user.getName());
			pstmt.setString(3, user.getEmail());
			pstmt.setString(4, user.getPass());
			pstmt.setLong(5, user.getContactNo());
			pstmt.setString(6, user.getAddress());
			int no=pstmt.executeUpdate();
			System.out.println(no);
			if(no>0)
				state=true;

		} catch (ClassNotFoundException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		return state;
	}
	
	public String Login(String uname,String pass) {
		String nameString = null;
		try(Connection connection = MyConnection.connect()){
			String sqlString = "select * from user where UserName = ? and Password = ?";
			PreparedStatement pStatement = connection.prepareStatement(sqlString);
			pStatement.setString(1, uname);
			pStatement.setString(2, pass);
			ResultSet result = pStatement.executeQuery();
			if(result.next()) {
				nameString = result.getString("UserName");
			}
			
		} catch (ClassNotFoundException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		return nameString;
	}

	public boolean Update(User user) {
		boolean state = false;
		try(Connection connection = MyConnection.connect()){
			String sqlString = "update user set Name = ?,Email = ?, contactNo = ?,address = ? where username = ? ";
			PreparedStatement pStatement = connection.prepareStatement(sqlString);
			pStatement.setString(1, user.getName());
			pStatement.setString(2, user.getEmail());
			pStatement.setLong(3, user.getContactNo());
			pStatement.setString(4, user.getAddress());
			pStatement.setString(5, user.getUserName());
			int no = pStatement.executeUpdate();
			System.out.println(no);
			if(no>0)
				state=true;

		} catch (ClassNotFoundException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		return state;
	}	
	public User getUserByUsername(String username) {
		User user= null;
		
		String sql="select * from user where username=?";
		 try (Connection connection=MyConnection.connect()){	  
				PreparedStatement pstatement=connection.prepareStatement(sql);
				pstatement.setString(1, username);
				System.out.println(pstatement);
				ResultSet rset= pstatement.executeQuery();
				while(rset.next()) {
					String uname = rset.getString("UserName");
					String name = rset.getString("Name");
					String email = rset.getString("Email");
					long contact = rset.getLong("contactNO");
					String address = rset.getString("address");
					user= new User(uname,name, email, contact, address);
					
					
				}
				
			} 
			  catch (ClassNotFoundException e) {
				e.printStackTrace();
			} catch (SQLException e) {
				e.printStackTrace();
			}
			System.out.println("Connection Autoclosed");
			System.out.println(user);
			return user;
	}
	
	  public List<User> getAllUser() { 
	  String sql="select * from user";
	  List<User> UserList=new ArrayList<>(); try (Connection
	  connection=MyConnection.connect())
	  { 
	  PreparedStatement pstatement=connection.prepareStatement(sql); // Statement 
	  ResultSet rset= pstatement.executeQuery();
	  System.out.println(rset.getClass()); // selected
	  while(rset.next()) { String
	  uname=rset.getString("UserName"); String name=rset.getString("name"); String
	  email=rset.getString("Email"); long contactNo = rset.getLong("contactNo");
	  String address = rset.getString("address");
	  
	  User user=new User(uname,name,email,contactNo,address); UserList.add(user); }
	  } catch (ClassNotFoundException e) { e.printStackTrace(); } catch
	  (SQLException e) { e.printStackTrace(); }
	  System.out.println("Connection Autoclosed"); 
	  return UserList;
	  }
	  public boolean DeleteUser(String username){
			boolean state=false;
			String sql="delete from user where UserName=?"; 
			try (Connection connection=MyConnection.connect()){	  
				PreparedStatement pstatement=connection.prepareStatement(sql);
				pstatement.setString(1,username);
				int no=pstatement.executeUpdate(); 
				if(no>0)
					state=true;
			} 
			  catch (SQLException e) {
				e.printStackTrace();
			} catch (ClassNotFoundException e1) {
				e1.printStackTrace();
			}
			System.out.println("Connection Autoclosed");
			return state;
		}

	}
